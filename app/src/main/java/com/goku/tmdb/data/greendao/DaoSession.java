package com.goku.tmdb.data.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.goku.tmdb.data.entity.Account;
import com.goku.tmdb.data.entity.configuration.Configuration;
import com.goku.tmdb.db.Favorite;
import com.goku.tmdb.db.WatchList;

import com.goku.tmdb.data.greendao.AccountDao;
import com.goku.tmdb.data.greendao.ConfigurationDao;
import com.goku.tmdb.data.greendao.FavoriteDao;
import com.goku.tmdb.data.greendao.WatchListDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accountDaoConfig;
    private final DaoConfig configurationDaoConfig;
    private final DaoConfig favoriteDaoConfig;
    private final DaoConfig watchListDaoConfig;

    private final AccountDao accountDao;
    private final ConfigurationDao configurationDao;
    private final FavoriteDao favoriteDao;
    private final WatchListDao watchListDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accountDaoConfig = daoConfigMap.get(AccountDao.class).clone();
        accountDaoConfig.initIdentityScope(type);

        configurationDaoConfig = daoConfigMap.get(ConfigurationDao.class).clone();
        configurationDaoConfig.initIdentityScope(type);

        favoriteDaoConfig = daoConfigMap.get(FavoriteDao.class).clone();
        favoriteDaoConfig.initIdentityScope(type);

        watchListDaoConfig = daoConfigMap.get(WatchListDao.class).clone();
        watchListDaoConfig.initIdentityScope(type);

        accountDao = new AccountDao(accountDaoConfig, this);
        configurationDao = new ConfigurationDao(configurationDaoConfig, this);
        favoriteDao = new FavoriteDao(favoriteDaoConfig, this);
        watchListDao = new WatchListDao(watchListDaoConfig, this);

        registerDao(Account.class, accountDao);
        registerDao(Configuration.class, configurationDao);
        registerDao(Favorite.class, favoriteDao);
        registerDao(WatchList.class, watchListDao);
    }
    
    public void clear() {
        accountDaoConfig.clearIdentityScope();
        configurationDaoConfig.clearIdentityScope();
        favoriteDaoConfig.clearIdentityScope();
        watchListDaoConfig.clearIdentityScope();
    }

    public AccountDao getAccountDao() {
        return accountDao;
    }

    public ConfigurationDao getConfigurationDao() {
        return configurationDao;
    }

    public FavoriteDao getFavoriteDao() {
        return favoriteDao;
    }

    public WatchListDao getWatchListDao() {
        return watchListDao;
    }

}
